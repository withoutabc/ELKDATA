          jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
          statement => "SELECT * FROM movie_ratings"
          tags => ["jdbc"]
  }
  file {
    path => "/home/withoutabc/elk/elk_data/log/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["file"]
  }
}

filter {
  if "client_ip" in [message] {
    grok {
      match => { "message" => "timestamp:%{TIMESTAMP_ISO8601:timestamp},status_code:%{NUMBER:status_code},client_ip:%{IP:client_ip},latency:%{NUMBER:latency_value}%{DATA:latency_unit},method:%{WORD:method},path:%{URIPATH:url_path}" }
    }
    date {
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
        target => "@timestamp"
    }
    mutate {
      add_field => {
        "index_name" => "visit"
      }
    }
  } else if "country" in [message] {
    grok {
    match => { "message" => "{\"level\":\"%{WORD:level}\",\"msg\":\"country:%{DATA:country},region:%{DATA:region},city:%{DATA:city},latitude:%{NUMBER:latitude},longitude:%{NUMBER:longitude}\",\"time\":\"%{TIMESTAMP_ISO8601:timestamp}\"}" }

    }
    date {
        match => [ "timestamp", "yyyy-MM-dd'T'HH:mm:ssZ" ]
        target => "@timestamp"
    }
    mutate {
      add_field => {
        "index_name" => "ip"
      }
    }
    mutate {
    convert => {
      "latitude" => "float"
      "longitude" => "float"
    }
  }

    mutate {
    add_field => {
      "location" => "%{[latitude]},%{[longitude]}"
    }
  }
  } else {
    drop {}
  }
}

output {
    if "jdbc" in [tags] {
      elasticsearch {
          hosts => ["elasticsearch:9200"]
          index => "movie_mysql"
        }
    }
    if "file" in [tags] {
      elasticsearch {
          hosts => ["elasticsearch:9200"]
          index => "%{index_name}"
        }
    }
    stdout {
            codec => rubydebug
    }
}
